// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger user management service - OpenAPI 3.0
 *
 * This is a sample some endpoints for 1C
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"errors"
	"github.com/donskova1ex/1cServices/internal/domain"
	"log/slog"
	"net/http"
)

// PDNcalculationAPIService is a service that implements the logic for the PDNcalculationAPIServicer
// This service should implement the business logic for every endpoint for the PDNcalculationAPI API.
// Include any external packages or services that will be required by this service.
type PDNCalculationProcessor interface {
	PDNCalculationByLoanId(ctx context.Context, loanid string) (*domain.CalculationParameters, error)
}

type PDNcalculationAPIService struct {
	pdnCalculationProcessor PDNCalculationProcessor
	log                     *slog.Logger
}

// NewPDNcalculationAPIService creates a default 1c_api service
func NewPDNcalculationAPIService(pdnCalculationProcessor PDNCalculationProcessor, log *slog.Logger) *PDNcalculationAPIService {
	return &PDNcalculationAPIService{
		pdnCalculationProcessor: pdnCalculationProcessor,
		log:                     log,
	}
}

// GetParametresByLoanId - Find parametres by loan id
func (s *PDNcalculationAPIService) GetParametresByLoanId(ctx context.Context, loanid string) (ImplResponse, error) {
	if loanid == "" {
		return Response(http.StatusBadRequest, nil), errors.New("loanId is required")
	}
	calculations, err := s.pdnCalculationProcessor.PDNCalculationByLoanId(ctx, loanid)
	if err != nil {
		return Response(http.StatusNotFound, nil), err
	}
	openApiCalculation := Pdnparameters{
		LoanId:               calculations.LoanId,
		Incomes:              calculations.Incomes,
		Expenses:             calculations.Expenses,
		IncomesTypeId:        calculations.IncomesTypeId,
		AverageRegionIncomes: calculations.AverageRegionIncomes,
	}
	return Response(http.StatusOK, openApiCalculation), nil
}
